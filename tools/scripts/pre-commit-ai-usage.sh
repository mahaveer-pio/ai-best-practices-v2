#!/bin/bash
# AI usage detection and documentation pre-commit hook

echo "==================================="
echo " AI USAGE CHECK & UPDATE"
echo "==================================="

# Variables
AI_USAGE_FILE="AI-USAGE.md"
TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")
DEVELOPER=$(git config user.name)
BRANCH=$(git rev-parse --abbrev-ref HEAD)
AI_DETECTED=false
AI_FILES=()

# Check for AI markers in staged files
echo "üîç Scanning for AI-generated code..."
for file in $(git diff --cached --name-only); do
  if [ -f "$file" ]; then
    # Check for AI markers in the file content
    if grep -qE "(AI-Generated|AI-Assisted|Copilot|Generated by AI|ChatGPT|Claude)" "$file"; then
      echo " ‚úì AI marker found in: $file"
      AI_FILES+=("$file")
      AI_DETECTED=true
    fi
    # Check for AI patterns in staged changes
    if git diff --cached "$file" | \
      grep -qE "(// AI:|# AI:|/\* AI|AI-Generated|Copilot)"; then
      echo " ‚úì AI code detected in: $file"
      AI_FILES+=("$file")
      AI_DETECTED=true
    fi
    # Check for suspiciously large additions (possible AI)
    NEW_LINES=$(git diff --cached "$file" | grep -c "^+")
    if [ "$NEW_LINES" -gt 20 ]; then
      echo " ‚ö†Ô∏è Large code addition in: $file (possible AI)"
      echo " Was this AI-generated? (y/n)"
      read response < /dev/tty
      if [ "$response" = "y" ]; then
        AI_FILES+=("$file")
        AI_DETECTED=true
      fi
    fi
  fi
done

# If AI detected, update AI-USAGE.md
if [ "$AI_DETECTED" = true ]; then
  echo ""
  echo "üìù AI code detected! Updating $AI_USAGE_FILE..."
  # Create AI-USAGE.md if it doesn't exist
  if [ ! -f "$AI_USAGE_FILE" ]; then
    cat > "$AI_USAGE_FILE" << 'EOF'
# AI Usage Documentation
This file tracks all AI-assisted code generation in this project.

## AI Tools Used
- GitHub Copilot
- ChatGPT
- Claude
- RooCode
- Cursor

## Usage Log
EOF
  fi

  # Add new entry to AI-USAGE.md
  cat >> "$AI_USAGE_FILE" << EOF
### $TIMESTAMP
- **Developer**: $DEVELOPER
- **Branch**: $BRANCH
- **AI Tool**: [Please specify which tool you used]
- **Files Modified**:
EOF

  # Add list of AI files
  for file in "${AI_FILES[@]}"; do
    echo "  - \`$file\`" >> "$AI_USAGE_FILE"
  done

  # Add description prompt
  echo "" >> "$AI_USAGE_FILE"
  echo "- **Description**: [Please describe what was generated/modified with AI assistance]" >> "$AI_USAGE_FILE"
  echo "- **Review Status**: [Pending/Completed]" >> "$AI_USAGE_FILE"
  echo "" >> "$AI_USAGE_FILE"
  echo "---" >> "$AI_USAGE_FILE"

  # Stage the updated AI-USAGE.md
  git add "$AI_USAGE_FILE"
  echo "‚úÖ $AI_USAGE_FILE has been updated and staged"

  # Check commit message for AI marker
  echo ""
  echo "‚ö†Ô∏è REMINDER: Your commit message must include [AI-ASSISTED] or [AI-GENERATED]"
  echo "Example: 'feat: Add login controller [AI-ASSISTED]'"
  echo ""
  # Force user to acknowledge
  echo "Have you included an AI marker in your commit message? (y/n)"
  read response < /dev/tty
  if [ "$response" != "y" ]; then
    echo "‚ùå Please add [AI-ASSISTED] to your commit message and try again"
    echo "Use: git commit -m 'your message [AI-ASSISTED]'"
    exit 1
  fi
else
  echo "‚úÖ No AI code detected in this commit"
fi
echo "==================================="
echo " ‚úÖ PRE-COMMIT PASSED"
echo "==================================="
exit 0
